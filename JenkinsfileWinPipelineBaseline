// Windows based Jenkins file that automates Veracode SCA and Pipeline scan. Add a SRCCLR_API_TOKEN and VERACODE_API_ACCOUNT API ID/KEY.
// Script is based off of documentation (https://help.veracode.com/reader/tS9CaFwL4_lbIEWWomsJoA/MVXQBY1PzfrTXGd6V~ZgxA) 
// and has been converted to work on a Windows based Jenkins machine. 
// Build a results.json file and compares against baseline.json file. If any net new flaws exist, it will break build. 
// Note: You must first run a scan to generate a baseline file. 

pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building..'

		powershell 'mvn package'
            }
        }
		stage('SCA') {
		environment {
			SRCCLR_API_TOKEN = credentials('SRCCLR_API_TOKEN')
		}
			steps {
				powershell """
                  Set-ExecutionPolicy AllSigned -Scope Process -Force
                  iex ((New-Object System.Net.WebClient).DownloadString('https://download.srcclr.com/ci.ps1')) 
                  srcclr scan .
		        """
        		}
		    }
		 
		stage('Veracode Pipeline Scan') {
		    environment {
			    SERVICE_CREDS = credentials('VERACODE_API_ACCOUNT')
		    }
		    
            steps {	
                // Copy baseline from previous build
                copyArtifacts(projectName: "$JOB_NAME", selector: lastSuccessful(stable: true), filter: 'baseline.json', target: '.', optional: true)
                script {
                    baseline = ''
                    if (fileExists('baseline.json')) {
                    baseline = '--baseline_file baseline.json'
                    }
                
                    powershell """
                    curl  https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip -o pipeline-scan.zip
                    Expand-Archive -Force -Path pipeline-scan.zip -DestinationPath veracode_scanner
                    java -jar veracode_scanner\\pipeline-scan.jar --veracode_api_id '${SERVICE_CREDS_USR}' \
                    --veracode_api_key '${SERVICE_CREDS_PSW}' \
                    --file target/verademo.war \
		    $baseline
            
                """
                }
		    }
        }
    
        stage('Store Baseline') {
            steps {
                    script {
                        try {
				input(message: 'Store results as baseline for future scans?', ok: 'Yes')
				powershell """
				    Copy-Item baseline.json -Destination build-baseline.json
				    Copy-Item results.json -Destination baseline.json
				 """
                        } catch (err) {

                        }
                    }
                }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying....'
                }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: "*.json", fingerprint: true, allowEmptyArchive: true
            deleteDir()
        }
    }    
}
